<?php

spl_autoload_register('apiAutoload');
function apiAutoload($classname)
{
    if (preg_match('/[a-zA-Z]+Controller$/', $classname)) {
        include __DIR__ . '/controllers/' . $classname . '.php';
        return true;
    } elseif (preg_match('/[a-zA-Z]+Model$/', $classname)) {
        include __DIR__ . '/models/' . $classname . '.php';
        return true;
    } elseif (preg_match('/[a-zA-Z]+View$/', $classname)) {
        include __DIR__ . '/views/' . $classname . '.php';
        return true;
    }
}

class Request {
	
	public $verb;
    public $url_elements;
    public $parameters;

    public function __construct() {
		
        $this->verb = $_SERVER['REQUEST_METHOD'];
		
        $this->url_elements = explode('/', $_SERVER['PATH_INFO']);
		
		$this->parseIncomingParams();
		
        // initialise json as default format
        $this->format = 'json';
		
        if(isset($this->parameters['format'])) {
            $this->format = $this->parameters['format'];
        }
        return true;
		
    }
	
    public function parseIncomingParams() {
        $parameters = array();

        // first of all, pull the GET vars
        if (isset($_SERVER['QUERY_STRING'])) {
            parse_str($_SERVER['QUERY_STRING'], $parameters);
        }

        $body = file_get_contents("php://input");
		
        $content_type = false;
		
        if(isset($_SERVER['CONTENT_TYPE'])) {
            $content_type = $_SERVER['CONTENT_TYPE'];
        }
        switch($content_type) {
            case "application/json":
                $body_params = json_decode($body);
                if($body_params) {
					
					$parameters = array_merge($parameters, json_decode($body, true));
					
                }
                $this->format = "json";
                break;
            case "application/x-www-form-urlencoded":
                parse_str($body, $postvars);

				$parameters = array_merge($parameters, $postvars);

                $this->format = "html";
                break;
            default:
                // we could parse other supported formats here
                break;
        }
        $this->parameters = $parameters;
    }
}

$Request = new Request();

$result = "";

// route the request to the right place
$controller_name = ucfirst($Request->url_elements[1]) . 'Controller';
if (class_exists($controller_name)) {
    $controller = new $controller_name();
    $action_name = strtolower($Request->verb) . 'Action';
    $result = $controller->$action_name($Request);
}

$view_name = ucfirst($Request->format) . 'View';

if(class_exists($view_name)) {
	$view = new $view_name();
	$view->render($result);
}

?>
